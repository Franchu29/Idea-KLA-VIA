<%- include('./partials/header'); %>
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Reporte de Ingresos</title>
  <!-- Incluir Chart.js desde un CDN -->
  <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
  
  <style>
    /* Contenedor de los gráficos usando Flexbox */
    .chart-container {
      display: flex;
      justify-content: space-between;
      gap: 20px; /* Espacio entre los gráficos */
      margin-top: 30px;
    }

    /* Estilo para los gráficos */
    .chart-container canvas {
      width: 48%;  /* Ocupa el 48% del ancho del contenedor */
      height: 400px; /* Altura fija para los gráficos */
    }
    
    h2 {
      text-align: center;
    }
  </style>
</head>
<body>
  <h1>Reporte de Ingresos por Evento</h1>

  <!-- Selector de años -->
  <form id="filtroAño" method="GET" action="">
    <label for="año">Selecciona el Año:</label>
    <select name="año" id="año" onchange="console.log(this.value); window.location.href = '/events/reportes/' + this.value;">
      <!-- Opción por defecto "Seleccione Año" -->
      <option value="" disabled selected>Seleccione Año</option>
      
      <% JSON.parse(añosDisponibles).forEach(a => { %>
        <option value="<%= a %>" <%= a === añoSeleccionado ? 'selected' : '' %>><%= a %></option>
      <% }) %>
    </select>    
  </form>  

  <!-- Contenedor para los gráficos -->
  <div class="chart-container">
    <!-- Gráfico de ingresos -->
    <div>
      <h2>Ingresos por Evento (<%= añoSeleccionado %>)</h2>
      <canvas id="ingresosChart"></canvas>
    </div>
    
    <!-- Gráfico de inscripciones -->
    <div>
      <h2>Cantidad de Inscripciones (<%= añoSeleccionado %>)</h2>
      <canvas id="inscripcionesChart"></canvas>
    </div>
  </div>

  <script>
    // Ingresos por evento
    const ingresosPorEvento = <%- ingresosPorEvento %>;

    // Preparar los datos para el gráfico de ingresos
    const labelsIngresos = ingresosPorEvento.map(evento => evento.nombre);
    const ingresos = ingresosPorEvento.map(evento => evento.ingresos);

    // Crear el gráfico de ingresos
    const ctxIngresos = document.getElementById('ingresosChart').getContext('2d');
    const ingresosChart = new Chart(ctxIngresos, {
      type: 'bar',
      data: {
        labels: labelsIngresos,
        datasets: [{
          label: 'Ingresos',
          data: ingresos,
          backgroundColor: 'rgba(75, 192, 192, 0.2)',
          borderColor: 'rgba(75, 192, 192, 1)',
          borderWidth: 1
        }]
      },
      options: {
        scales: {
          y: {
            beginAtZero: true
          }
        }
      }
    });

    // Cantidad de inscripciones por evento
    const inscripcionesPorEvento = <%- inscripcionesPorEvento %>;

    // Preparar los datos para el gráfico de inscripciones
    const labelsInscripciones = inscripcionesPorEvento.map(evento => evento.nombre);
    const inscripciones = inscripcionesPorEvento.map(evento => evento.inscripciones);

    // Crear el gráfico de inscripciones
    const ctxInscripciones = document.getElementById('inscripcionesChart').getContext('2d');
    const inscripcionesChart = new Chart(ctxInscripciones, {
      type: 'bar',
      data: {
        labels: labelsInscripciones,
        datasets: [{
          label: 'Cantidad de Inscripciones',
          data: inscripciones,
          backgroundColor: 'rgba(153, 102, 255, 0.2)',
          borderColor: 'rgba(153, 102, 255, 1)',
          borderWidth: 1
        }]
      },
      options: {
        scales: {
          y: {
            beginAtZero: true
          }
        }
      }
    });
  </script>
</body>
</html>
